jQuery(document).ready(e=>{"use strict";window.SV_WC_Google_Pay_Handler_v5_8_1=class{constructor(e){let{plugin_id:t,merchant_id:o,gateway_id:a,gateway_id_dasherized:n,ajax_url:s,process_nonce:i,button_style:r,card_types:c,generic_error:l}=e;this.gatewayID=a,this.ajaxURL=s,this.processNonce=i,this.genericError=l;const m=c;this.baseRequest={apiVersion:2,apiVersionMinor:0};const h={type:"PAYMENT_GATEWAY",parameters:{gateway:t,gatewayMerchantId:o}};this.baseCardPaymentMethod={type:"CARD",parameters:{allowedAuthMethods:["PAN_ONLY","CRYPTOGRAM_3DS"],allowedCardNetworks:m}},this.cardPaymentMethod=Object.assign({},this.baseCardPaymentMethod,{tokenizationSpecification:h}),this.paymentsClient=null}getGoogleIsReadyToPayRequest(){return Object.assign({},this.baseRequest,{allowedPaymentMethods:[this.baseCardPaymentMethod]})}getGoogleTransactionInfo(){return{countryCode:"US",currencyCode:"USD",totalPriceStatus:"FINAL",totalPrice:"1.00"}}getGooglePaymentDataRequest(){const e=Object.assign({},this.baseRequest);return e.allowedPaymentMethods=[this.cardPaymentMethod],e.transactionInfo=this.getGoogleTransactionInfo(),e.merchantInfo={merchantName:"Example Merchant"},e}getGooglePaymentsClient(){return null===this.paymentsClient&&(this.paymentsClient=new google.payments.api.PaymentsClient({environment:"TEST"})),this.paymentsClient}addGooglePayButton(){const e=this.getGooglePaymentsClient().createButton({onClick:()=>this.onGooglePaymentButtonClicked()});document.getElementById("sv-wc-google-pay-button-container").appendChild(e)}prefetchGooglePaymentData(){const e=this.getGooglePaymentDataRequest();e.transactionInfo={totalPriceStatus:"NOT_CURRENTLY_KNOWN",currencyCode:"USD"},this.getGooglePaymentsClient().prefetchPaymentData(e)}processPayment(t){console.log(t);const o={action:`wc_${this.gatewayID}_google_pay_process_payment`,nonce:this.processNonce,paymentMethod:JSON.stringify(t.paymentMethodData)};e.post(this.ajaxURL,o,e=>{console.log(e),e.success?window.location=e.redirect:this.fail_payment("Payment could no be processed. "+e.data.message)})}onGooglePaymentButtonClicked(){this.block_ui();const e=this.getGooglePaymentDataRequest();e.transactionInfo=this.getGoogleTransactionInfo(),this.getGooglePaymentsClient().loadPaymentData(e).then(e=>{this.processPayment(e)}).catch(e=>{this.fail_payment(e)})}init(){e("form.cart").length?this.init_product_page():e("form.woocommerce-cart-form").length?this.init_cart_page():e("form.woocommerce-checkout").length&&this.init_checkout_page(),this.getGooglePaymentsClient().isReadyToPay(this.getGoogleIsReadyToPayRequest()).then(e=>{e.result&&this.addGooglePayButton()}).catch(e=>{console.error(e)})}init_product_page(){this.ui_element=e("form.cart")}init_cart_page(){this.ui_element=e("form.woocommerce-cart-form").parents("div.woocommerce")}init_checkout_page(){this.ui_element=e("form.woocommerce-checkout")}fail_payment(e){console.error("[Google Pay] "+e),this.unblock_ui(),this.render_errors([this.genericError])}render_errors(t){e(".woocommerce-error, .woocommerce-message").remove(),this.ui_element.prepend('<ul class="woocommerce-error"><li>'+t.join("</li><li>")+"</li></ul>"),this.ui_element.removeClass("processing").unblock(),e("html, body").animate({scrollTop:this.ui_element.offset().top-100},1e3)}block_ui(){this.ui_element.block({message:null,overlayCSS:{background:"#fff",opacity:.6}})}unblock_ui(){this.ui_element.unblock()}},e(document.body).trigger("sv_wc_google_pay_handler_v5_8_1_loaded")});
//# sourceMappingURL=sv-wc-payment-gateway-google-pay.min.js.map