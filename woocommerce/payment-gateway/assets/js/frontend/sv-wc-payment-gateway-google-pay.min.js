jQuery(document).ready(e=>{"use strict";window.SV_WC_Google_Pay_Handler_v5_8_1=class{constructor(e){let{plugin_id:t,merchant_id:o,gateway_id:n,gateway_id_dasherized:a,ajax_url:s,process_nonce:i,button_style:r,card_types:l,generic_error:c}=e;this.gatewayID=n,this.merchantID=o,this.ajaxURL=s,this.processNonce=i,this.genericError=c;const g=l;this.baseRequest={apiVersion:2,apiVersionMinor:0};const h={type:"PAYMENT_GATEWAY",parameters:{gateway:t,gatewayMerchantId:this.merchantID}};this.baseCardPaymentMethod={type:"CARD",parameters:{allowedAuthMethods:["PAN_ONLY","CRYPTOGRAM_3DS"],allowedCardNetworks:g}},this.cardPaymentMethod=Object.assign({},this.baseCardPaymentMethod,{tokenizationSpecification:h}),this.paymentsClient=null}getGoogleIsReadyToPayRequest(){return Object.assign({},this.baseRequest,{allowedPaymentMethods:[this.baseCardPaymentMethod]})}getGooglePaymentDataRequest(){return this.getGoogleTransactionInfo().then(t=>{console.log(t);const o=Object.assign({},this.baseRequest);return o.allowedPaymentMethods=[this.cardPaymentMethod],o.transactionInfo=e.parseJSON(t.data),console.log(o),o.merchantInfo={merchantName:"Example Merchant"},o.callbackIntents=["SHIPPING_ADDRESS","SHIPPING_OPTION","PAYMENT_AUTHORIZATION"],o.shippingAddressRequired=!0,o.shippingAddressParameters=this.getGoogleShippingAddressParameters(),o.shippingOptionRequired=!0,o})}getGooglePaymentsClient(){return null===this.paymentsClient&&(this.paymentsClient=new google.payments.api.PaymentsClient({environment:"TEST",merchantInfo:{merchantName:"Example Merchant",merchantId:this.merchantID},paymentDataCallbacks:{onPaymentAuthorized:e=>this.onPaymentAuthorized(e),onPaymentDataChanged:e=>this.onPaymentDataChanged(e)}})),this.paymentsClient}onPaymentAuthorized(e){return console.log("onPaymentAuthorized"),console.log(e),new Promise((t,o)=>{try{this.processPayment(e,t)}catch(e){console.log("catch"),console.error(e),o({transactionState:"ERROR",error:{intent:"PAYMENT_AUTHORIZATION",message:"Insufficient funds",reason:"PAYMENT_DATA_INVALID"}})}})}onPaymentDataChanged(e){return console.log("onPaymentDataChanged"),console.log(e),new Promise((t,o)=>{console.log(t),console.log(o);try{let n=e.shippingAddress,a=e.shippingOptionData,s={};if("INITIALIZE"==e.callbackTrigger||"SHIPPING_ADDRESS"==e.callbackTrigger)if("NJ"==n.administrativeArea)s.error=this.getGoogleUnserviceableAddressError();else{s.newShippingOptionParameters=this.getGoogleDefaultShippingOptions();let e=s.newShippingOptionParameters.defaultSelectedOptionId;s.newTransactionInfo=this.calculateNewTransactionInfo(e)}else"SHIPPING_OPTION"==e.callbackTrigger&&(s.newTransactionInfo=this.calculateNewTransactionInfo(a.id));console.log("paymentDataRequestUpdate"),console.log(s),t(s)}catch(e){console.log("catch"),console.error(e),o({transactionState:"ERROR",error:{intent:"PAYMENT_AUTHORIZATION",message:"Insufficient funds",reason:"PAYMENT_DATA_INVALID"}})}})}calculateNewTransactionInfo(t){this.getGoogleTransactionInfo().then(o=>{let n=e.parseJSON(o.data),a=this.getShippingCosts()[t];n.displayItems.push({type:"LINE_ITEM",label:"Shipping cost",price:a,status:"FINAL"});let s=0;return n.displayItems.forEach(e=>s+=parseFloat(e.price)),n.totalPrice=s.toString(),n})}getGoogleTransactionInfo(){const t={action:`wc_${this.gatewayID}_google_pay_get_transaction_info`};return e.post(this.ajaxURL,t,t=>{if(console.log(t),t.success)return e.parseJSON(t.data);this.fail_payment("Could not build transaction info. "+t.data.message)})}getShippingCosts(){return{"shipping-001":"0.00","shipping-002":"1.99","shipping-003":"10.00"}}getGoogleShippingAddressParameters(){return{allowedCountryCodes:["US"],phoneNumberRequired:!0}}getGoogleDefaultShippingOptions(){return{defaultSelectedOptionId:"shipping-001",shippingOptions:[{id:"shipping-001",label:"Free: Standard shipping",description:"Free Shipping delivered in 5 business days."},{id:"shipping-002",label:"$1.99: Standard shipping",description:"Standard shipping delivered in 3 business days."},{id:"shipping-003",label:"$10: Express shipping",description:"Express shipping delivered in 1 business day."}]}}getGoogleUnserviceableAddressError(){return{reason:"SHIPPING_ADDRESS_UNSERVICEABLE",message:"Cannot ship to the selected address",intent:"SHIPPING_ADDRESS"}}addGooglePayButton(){const e=this.getGooglePaymentsClient().createButton({onClick:()=>this.onGooglePaymentButtonClicked()});document.getElementById("sv-wc-google-pay-button-container").appendChild(e)}prefetchGooglePaymentData(){this.getGooglePaymentDataRequest().then(e=>{e.transactionInfo={totalPriceStatus:"NOT_CURRENTLY_KNOWN",currencyCode:"USD"},this.getGooglePaymentsClient().prefetchPaymentData(e)})}processPayment(t,o){console.log(t);const n={action:`wc_${this.gatewayID}_google_pay_process_payment`,nonce:this.processNonce,paymentMethod:JSON.stringify(t.paymentMethodData)};return e.post(this.ajaxURL,n,e=>{e.success?(o({transactionState:"SUCCESS"}),window.location=e.data.redirect):(o({transactionState:"ERROR",error:{intent:"SHIPPING_ADDRESS",message:"Invalid data",reason:"PAYMENT_DATA_INVALID"}}),this.fail_payment("Payment could no be processed. "+e.data.message))})}onGooglePaymentButtonClicked(){this.block_ui(),this.getGooglePaymentDataRequest().then(e=>{console.log(e),console.log(e.transactionInfo),console.log(e.transactionInfo.displayItems);const t=this.getGooglePaymentsClient();try{t.loadPaymentData(e)}catch(e){console.error(e)}})}init(){e("form.cart").length?this.init_product_page():e("form.woocommerce-cart-form").length?this.init_cart_page():e("form.woocommerce-checkout").length&&this.init_checkout_page(),this.getGooglePaymentsClient().isReadyToPay(this.getGoogleIsReadyToPayRequest()).then(e=>{e.result&&this.addGooglePayButton()}).catch(e=>{console.error(e)})}init_product_page(){this.ui_element=e("form.cart")}init_cart_page(){this.ui_element=e("form.woocommerce-cart-form").parents("div.woocommerce")}init_checkout_page(){this.ui_element=e("form.woocommerce-checkout")}fail_payment(e){console.error("[Google Pay] "+e),this.unblock_ui(),this.render_errors([this.genericError])}render_errors(t){e(".woocommerce-error, .woocommerce-message").remove(),this.ui_element.prepend('<ul class="woocommerce-error"><li>'+t.join("</li><li>")+"</li></ul>"),this.ui_element.removeClass("processing").unblock(),e("html, body").animate({scrollTop:this.ui_element.offset().top-100},1e3)}block_ui(){this.ui_element.block({message:null,overlayCSS:{background:"#fff",opacity:.6}})}unblock_ui(){this.ui_element.unblock()}},e(document.body).trigger("sv_wc_google_pay_handler_v5_8_1_loaded")});
//# sourceMappingURL=sv-wc-payment-gateway-google-pay.min.js.map